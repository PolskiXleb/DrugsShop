@using PagedList
@using PagedList.Mvc
@using DrugsShop.Models
@model IPagedList<Product>
@{
//ViewBag.Title = "Index";
}

@using (Html.BeginForm("Index", "Product", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.SearchString as string)
        <input type="submit" value="Search" />
    </p>
}

<table>
    <tr>
        <th>
            @Html.ActionLink("Product name", "Index", new { searchString = ViewBag.SearchString, sortParam = ViewBag.NameSortParam, onlyWithoutRecipe = ViewBag.OnlyWithoutRecipe })
        </th>
        <th>
            @Html.ActionLink("Cost", "Index", new { searchString = ViewBag.SearchString, sortParam = (ViewBag.CostSortParam ?? "cost"), onlyWithoutRecipe = ViewBag.OnlyWithoutRecipe })
        </th>
        <th>
            By recipe
        </th>
        <th>
            Amount
        </th>
        <th>
            @Html.ActionLink("Все медикоменты", "Index", new { searchString = ViewBag.SearchString, sortParam = ViewBag.NameSortParam, onlyWithoutRecipe = false })
        </th>
        <th>
            @Html.ActionLink("Только без рецепта", "Index", new { searchString = ViewBag.SearchString, sortParam = ViewBag.NameSortParam, onlyWithoutRecipe = true })
        </th>
        
    </tr>
    @foreach (Product product in Model)
    {
        
        <tr id="products">
            <td>
                @product.Name
            </td>
            <td>
                @product.Cost
            </td>
            <td>
                @{
                    string recipe = "без рецепта";
                    if (product.ByRecipe) { recipe = "по рецепту"; };
                }
                @recipe
            </td>
            <td>
                 <button class="btn btn-danger btn-link" value="@product.Id" onclick="clickAdd(@product.Id)">Заказать</button> 
            </td>
            <td >
                <input type="text" class="count" id="@product.Id" value="" />
            </td>
        </tr>
    }
</table>


    <button value="" onclick="openCart()">Корзина</button>


    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, searchString = ViewBag.SearchString, sortParam = ViewBag.CurrentSort, onlyWithoutRecipe = ViewBag.OnlyWithoutRecipe }))


